   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC3:
  20 0000 0D0A00   		.ascii	"\015\012\000"
  21 0003 00       		.align	2
  22              	.LC5:
  23 0004 4C3A00   		.ascii	"L:\000"
  24 0007 00       		.align	2
  25              	.LC8:
  26 0008 25642C00 		.ascii	"%d,\000"
  27              		.align	2
  28              	.LC11:
  29 000c 0D0A0D0A 		.ascii	"\015\012\015\012\015\012\015\012\000"
  29      0D0A0D0A 
  29      00
  30 0015 000000   		.section	.text.main,"ax",%progbits
  31              		.align	2
  32              		.global	main
  33              		.code	16
  34              		.thumb_func
  36              	main:
  37              	.LFB0:
  38              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** int main(void)
   5:../Sources/main.c **** {
  39              		.loc 1 5 0
  40              		.cfi_startproc
  41 0000 90B5     		push	{r4, r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 12
  44              		.cfi_offset 4, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 83B0     		sub	sp, sp, #12
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 24
  50 0004 00AF     		add	r7, sp, #0
  51              	.LCFI2:
  52              		.cfi_def_cfa_register 7
   6:../Sources/main.c **** 	uint32_t t,i=0;
  53              		.loc 1 6 0
  54 0006 0023     		mov	r3, #0
  55 0008 3B60     		str	r3, [r7]
   7:../Sources/main.c **** 	
   8:../Sources/main.c **** 	TFC_Init();
  56              		.loc 1 8 0
  57 000a FFF7FEFF 		bl	TFC_Init
  58              	.L28:
   9:../Sources/main.c **** 	
  10:../Sources/main.c **** 	for(;;)
  11:../Sources/main.c **** 	{	   
  12:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  13:../Sources/main.c **** 			TFC_Task();
  59              		.loc 1 13 0
  60 000e FFF7FEFF 		bl	TFC_Task
  14:../Sources/main.c **** 
  15:../Sources/main.c **** 			//This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  16:../Sources/main.c **** 			//Let's look at the middle 2 switches
  17:../Sources/main.c **** 			switch((TFC_GetDIP_Switch()>>1)&0x03)
  61              		.loc 1 17 0
  62 0012 FFF7FEFF 		bl	TFC_GetDIP_Switch
  63 0016 031C     		mov	r3, r0
  64 0018 5B08     		lsr	r3, r3, #1
  65 001a DBB2     		uxtb	r3, r3
  66 001c 1A1C     		mov	r2, r3
  67 001e 0323     		mov	r3, #3
  68 0020 1340     		and	r3, r2
  69 0022 022B     		cmp	r3, #2
  70 0024 00D1     		bne	.LCB30
  71 0026 79E0     		b	.L4	@long jump
  72              	.LCB30:
  73 0028 032B     		cmp	r3, #3
  74 002a 00D1     		bne	.LCB32
  75 002c 9CE0     		b	.L5	@long jump
  76              	.LCB32:
  77 002e 012B     		cmp	r3, #1
  78 0030 3ED0     		beq	.L3
  18:../Sources/main.c **** 			{
  19:../Sources/main.c **** 			default:
  20:../Sources/main.c **** 			case 0 :
  21:../Sources/main.c **** 				//Demo mode 0 just tests the switches and LED's
  22:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_0_PRESSED)
  79              		.loc 1 22 0
  80 0032 814B     		ldr	r3, .L31
  81 0034 1A69     		ldr	r2, [r3, #16]
  82 0036 8023     		mov	r3, #128
  83 0038 9B01     		lsl	r3, r3, #6
  84 003a 1340     		and	r3, r2
  85 003c 04D0     		beq	.L6
  23:../Sources/main.c **** 					TFC_BAT_LED0_ON;
  86              		.loc 1 23 0
  87 003e 7F4B     		ldr	r3, .L31+4
  88 0040 8022     		mov	r2, #128
  89 0042 5200     		lsl	r2, r2, #1
  90 0044 5A60     		str	r2, [r3, #4]
  91 0046 03E0     		b	.L7
  92              	.L6:
  24:../Sources/main.c **** 				else
  25:../Sources/main.c **** 					TFC_BAT_LED0_OFF;
  93              		.loc 1 25 0
  94 0048 7C4B     		ldr	r3, .L31+4
  95 004a 8022     		mov	r2, #128
  96 004c 5200     		lsl	r2, r2, #1
  97 004e 9A60     		str	r2, [r3, #8]
  98              	.L7:
  26:../Sources/main.c **** 				
  27:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_1_PRESSED)
  99              		.loc 1 27 0
 100 0050 794B     		ldr	r3, .L31
 101 0052 1A69     		ldr	r2, [r3, #16]
 102 0054 8023     		mov	r3, #128
 103 0056 9B02     		lsl	r3, r3, #10
 104 0058 1340     		and	r3, r2
 105 005a 04D0     		beq	.L8
  28:../Sources/main.c **** 					TFC_BAT_LED3_ON;
 106              		.loc 1 28 0
 107 005c 774B     		ldr	r3, .L31+4
 108 005e 8022     		mov	r2, #128
 109 0060 1201     		lsl	r2, r2, #4
 110 0062 5A60     		str	r2, [r3, #4]
 111 0064 03E0     		b	.L9
 112              	.L8:
  29:../Sources/main.c **** 				else
  30:../Sources/main.c **** 					TFC_BAT_LED3_OFF;
 113              		.loc 1 30 0
 114 0066 754B     		ldr	r3, .L31+4
 115 0068 8022     		mov	r2, #128
 116 006a 1201     		lsl	r2, r2, #4
 117 006c 9A60     		str	r2, [r3, #8]
 118              	.L9:
  31:../Sources/main.c **** 				
  32:../Sources/main.c **** 				
  33:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x01)
 119              		.loc 1 33 0
 120 006e FFF7FEFF 		bl	TFC_GetDIP_Switch
 121 0072 031C     		mov	r3, r0
 122 0074 1A1C     		mov	r2, r3
 123 0076 0123     		mov	r3, #1
 124 0078 1340     		and	r3, r2
 125 007a 04D0     		beq	.L10
  34:../Sources/main.c **** 					TFC_BAT_LED1_ON;
 126              		.loc 1 34 0
 127 007c 6F4B     		ldr	r3, .L31+4
 128 007e 8022     		mov	r2, #128
 129 0080 9200     		lsl	r2, r2, #2
 130 0082 5A60     		str	r2, [r3, #4]
 131 0084 03E0     		b	.L11
 132              	.L10:
  35:../Sources/main.c **** 				else
  36:../Sources/main.c **** 					TFC_BAT_LED1_OFF;
 133              		.loc 1 36 0
 134 0086 6D4B     		ldr	r3, .L31+4
 135 0088 8022     		mov	r2, #128
 136 008a 9200     		lsl	r2, r2, #2
 137 008c 9A60     		str	r2, [r3, #8]
 138              	.L11:
  37:../Sources/main.c **** 				
  38:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x08)
 139              		.loc 1 38 0
 140 008e FFF7FEFF 		bl	TFC_GetDIP_Switch
 141 0092 031C     		mov	r3, r0
 142 0094 1A1C     		mov	r2, r3
 143 0096 0823     		mov	r3, #8
 144 0098 1340     		and	r3, r2
 145 009a 04D0     		beq	.L12
  39:../Sources/main.c **** 					TFC_BAT_LED2_ON;
 146              		.loc 1 39 0
 147 009c 674B     		ldr	r3, .L31+4
 148 009e 8022     		mov	r2, #128
 149 00a0 D200     		lsl	r2, r2, #3
 150 00a2 5A60     		str	r2, [r3, #4]
  40:../Sources/main.c **** 				else
  41:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
  42:../Sources/main.c **** 				
  43:../Sources/main.c **** 				break;
 151              		.loc 1 43 0
 152 00a4 C6E0     		b	.L14
 153              	.L12:
  41:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
 154              		.loc 1 41 0
 155 00a6 654B     		ldr	r3, .L31+4
 156 00a8 8022     		mov	r2, #128
 157 00aa D200     		lsl	r2, r2, #3
 158 00ac 9A60     		str	r2, [r3, #8]
 159              		.loc 1 43 0
 160 00ae C1E0     		b	.L14
 161              	.L3:
  44:../Sources/main.c **** 					
  45:../Sources/main.c **** 			case 1:
  46:../Sources/main.c **** 				
  47:../Sources/main.c **** 				//Demo mode 1 will just move the servos with the on-board potentiometers
  48:../Sources/main.c **** 				if(TFC_Ticker[0]>=20)
 162              		.loc 1 48 0
 163 00b0 634B     		ldr	r3, .L31+8
 164 00b2 1B68     		ldr	r3, [r3]
 165 00b4 132B     		cmp	r3, #19
 166 00b6 12D9     		bls	.L15
  49:../Sources/main.c **** 				{
  50:../Sources/main.c **** 					TFC_Ticker[0] = 0; //reset the Ticker
 167              		.loc 1 50 0
 168 00b8 614B     		ldr	r3, .L31+8
 169 00ba 0022     		mov	r2, #0
 170 00bc 1A60     		str	r2, [r3]
  51:../Sources/main.c **** 					//Every 20 mSeconds, update the Servos
  52:../Sources/main.c **** 					TFC_SetServo(0,TFC_ReadPot(0));
 171              		.loc 1 52 0
 172 00be 0020     		mov	r0, #0
 173 00c0 FFF7FEFF 		bl	TFC_ReadPot
 174 00c4 031C     		add	r3, r0, #0
 175 00c6 0020     		mov	r0, #0
 176 00c8 191C     		add	r1, r3, #0
 177 00ca FFF7FEFF 		bl	TFC_SetServo
  53:../Sources/main.c **** 					TFC_SetServo(1,TFC_ReadPot(1));
 178              		.loc 1 53 0
 179 00ce 0120     		mov	r0, #1
 180 00d0 FFF7FEFF 		bl	TFC_ReadPot
 181 00d4 031C     		add	r3, r0, #0
 182 00d6 0120     		mov	r0, #1
 183 00d8 191C     		add	r1, r3, #0
 184 00da FFF7FEFF 		bl	TFC_SetServo
 185              	.L15:
  54:../Sources/main.c **** 				}
  55:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  56:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 186              		.loc 1 56 0
 187 00de 584B     		ldr	r3, .L31+8
 188 00e0 5B68     		ldr	r3, [r3, #4]
 189 00e2 7C2B     		cmp	r3, #124
 190 00e4 0FD9     		bls	.L16
  57:../Sources/main.c **** 				{
  58:../Sources/main.c **** 					TFC_Ticker[1] = 0;
 191              		.loc 1 58 0
 192 00e6 564B     		ldr	r3, .L31+8
 193 00e8 0022     		mov	r2, #0
 194 00ea 5A60     		str	r2, [r3, #4]
  59:../Sources/main.c **** 					t++;
 195              		.loc 1 59 0
 196 00ec 7B68     		ldr	r3, [r7, #4]
 197 00ee 0133     		add	r3, r3, #1
 198 00f0 7B60     		str	r3, [r7, #4]
  60:../Sources/main.c **** 					if(t>4)
 199              		.loc 1 60 0
 200 00f2 7B68     		ldr	r3, [r7, #4]
 201 00f4 042B     		cmp	r3, #4
 202 00f6 01D9     		bls	.L17
  61:../Sources/main.c **** 					{
  62:../Sources/main.c **** 						t=0;
 203              		.loc 1 62 0
 204 00f8 0023     		mov	r3, #0
 205 00fa 7B60     		str	r3, [r7, #4]
 206              	.L17:
  63:../Sources/main.c **** 					}			
  64:../Sources/main.c **** 					TFC_SetBatteryLED_Level(t);
 207              		.loc 1 64 0
 208 00fc 7B68     		ldr	r3, [r7, #4]
 209 00fe DBB2     		uxtb	r3, r3
 210 0100 181C     		mov	r0, r3
 211 0102 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 212              	.L16:
  65:../Sources/main.c **** 				}
  66:../Sources/main.c **** 				
  67:../Sources/main.c **** 				TFC_SetMotorPWM(0,0); //Make sure motors are off
 213              		.loc 1 67 0
 214 0106 0022     		mov	r2, #0
 215 0108 0023     		mov	r3, #0
 216 010a 101C     		add	r0, r2, #0
 217 010c 191C     		add	r1, r3, #0
 218 010e FFF7FEFF 		bl	TFC_SetMotorPWM
  68:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 219              		.loc 1 68 0
 220 0112 4C4B     		ldr	r3, .L31+12
 221 0114 8022     		mov	r2, #128
 222 0116 9203     		lsl	r2, r2, #14
 223 0118 9A60     		str	r2, [r3, #8]
  69:../Sources/main.c **** 			
  70:../Sources/main.c **** 
  71:../Sources/main.c **** 				break;
 224              		.loc 1 71 0
 225 011a 8BE0     		b	.L14
 226              	.L4:
  72:../Sources/main.c **** 				
  73:../Sources/main.c **** 			case 2 :
  74:../Sources/main.c **** 				
  75:../Sources/main.c **** 				//Demo Mode 2 will use the Pots to make the motors move
  76:../Sources/main.c **** 				TFC_HBRIDGE_ENABLE;
 227              		.loc 1 76 0
 228 011c 494B     		ldr	r3, .L31+12
 229 011e 8022     		mov	r2, #128
 230 0120 9203     		lsl	r2, r2, #14
 231 0122 5A60     		str	r2, [r3, #4]
  77:../Sources/main.c **** 				TFC_SetMotorPWM(TFC_ReadPot(0),TFC_ReadPot(1));
 232              		.loc 1 77 0
 233 0124 0020     		mov	r0, #0
 234 0126 FFF7FEFF 		bl	TFC_ReadPot
 235 012a 041C     		add	r4, r0, #0
 236 012c 0120     		mov	r0, #1
 237 012e FFF7FEFF 		bl	TFC_ReadPot
 238 0132 031C     		add	r3, r0, #0
 239 0134 201C     		add	r0, r4, #0
 240 0136 191C     		add	r1, r3, #0
 241 0138 FFF7FEFF 		bl	TFC_SetMotorPWM
  78:../Sources/main.c **** 						
  79:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  80:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 242              		.loc 1 80 0
 243 013c 404B     		ldr	r3, .L31+8
 244 013e 5B68     		ldr	r3, [r3, #4]
 245 0140 7C2B     		cmp	r3, #124
 246 0142 00D8     		bhi	.LCB194
 247 0144 73E0     		b	.L29	@long jump
 248              	.LCB194:
  81:../Sources/main.c **** 					{
  82:../Sources/main.c **** 						TFC_Ticker[1] = 0;
 249              		.loc 1 82 0
 250 0146 3E4B     		ldr	r3, .L31+8
 251 0148 0022     		mov	r2, #0
 252 014a 5A60     		str	r2, [r3, #4]
  83:../Sources/main.c **** 							t++;
 253              		.loc 1 83 0
 254 014c 7B68     		ldr	r3, [r7, #4]
 255 014e 0133     		add	r3, r3, #1
 256 0150 7B60     		str	r3, [r7, #4]
  84:../Sources/main.c **** 							if(t>4)
 257              		.loc 1 84 0
 258 0152 7B68     		ldr	r3, [r7, #4]
 259 0154 042B     		cmp	r3, #4
 260 0156 01D9     		bls	.L19
  85:../Sources/main.c **** 							{
  86:../Sources/main.c **** 								t=0;
 261              		.loc 1 86 0
 262 0158 0023     		mov	r3, #0
 263 015a 7B60     		str	r3, [r7, #4]
 264              	.L19:
  87:../Sources/main.c **** 							}			
  88:../Sources/main.c **** 						TFC_SetBatteryLED_Level(t);
 265              		.loc 1 88 0
 266 015c 7B68     		ldr	r3, [r7, #4]
 267 015e DBB2     		uxtb	r3, r3
 268 0160 181C     		mov	r0, r3
 269 0162 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  89:../Sources/main.c **** 					}
  90:../Sources/main.c **** 				break;
 270              		.loc 1 90 0
 271 0166 62E0     		b	.L29
 272              	.L5:
  91:../Sources/main.c **** 			
  92:../Sources/main.c **** 			case 3 :
  93:../Sources/main.c **** 			
  94:../Sources/main.c **** 				//Demo Mode 3 will be in Freescale Garage Mode.  It will beam data from the Camera to the 
  95:../Sources/main.c **** 				//Labview Application
  96:../Sources/main.c **** 				
  97:../Sources/main.c **** 		
  98:../Sources/main.c **** 				if(TFC_Ticker[0]>1000 && LineScanImageReady==1)
 273              		.loc 1 98 0
 274 0168 354B     		ldr	r3, .L31+8
 275 016a 1A68     		ldr	r2, [r3]
 276 016c FA23     		mov	r3, #250
 277 016e 9B00     		lsl	r3, r3, #2
 278 0170 9A42     		cmp	r2, r3
 279 0172 5ED9     		bls	.L30
 280              		.loc 1 98 0 is_stmt 0
 281 0174 344B     		ldr	r3, .L31+16
 282 0176 1B78     		ldrb	r3, [r3]
 283 0178 DBB2     		uxtb	r3, r3
 284 017a 012B     		cmp	r3, #1
 285 017c 59D1     		bne	.L30
  99:../Sources/main.c **** 					{
 100:../Sources/main.c **** 					 TFC_Ticker[0] = 0;
 286              		.loc 1 100 0 is_stmt 1
 287 017e 304B     		ldr	r3, .L31+8
 288 0180 0022     		mov	r2, #0
 289 0182 1A60     		str	r2, [r3]
 101:../Sources/main.c **** 					 LineScanImageReady=0;
 290              		.loc 1 101 0
 291 0184 304B     		ldr	r3, .L31+16
 292 0186 0022     		mov	r2, #0
 293 0188 1A70     		strb	r2, [r3]
 102:../Sources/main.c **** 					 TERMINAL_PRINTF("\r\n");
 294              		.loc 1 102 0
 295 018a 304A     		ldr	r2, .L31+20
 296 018c 304B     		ldr	r3, .L31+24
 297 018e 101C     		mov	r0, r2
 298 0190 191C     		mov	r1, r3
 299 0192 FFF7FEFF 		bl	Qprintf
 103:../Sources/main.c **** 					 TERMINAL_PRINTF("L:");
 300              		.loc 1 103 0
 301 0196 2D4A     		ldr	r2, .L31+20
 302 0198 2E4B     		ldr	r3, .L31+28
 303 019a 101C     		mov	r0, r2
 304 019c 191C     		mov	r1, r3
 305 019e FFF7FEFF 		bl	Qprintf
 104:../Sources/main.c **** 					 
 105:../Sources/main.c **** 					 	if(t==0)
 306              		.loc 1 105 0
 307 01a2 7B68     		ldr	r3, [r7, #4]
 308 01a4 002B     		cmp	r3, #0
 309 01a6 02D1     		bne	.L21
 106:../Sources/main.c **** 					 		t=3;
 310              		.loc 1 106 0
 311 01a8 0323     		mov	r3, #3
 312 01aa 7B60     		str	r3, [r7, #4]
 313 01ac 02E0     		b	.L22
 314              	.L21:
 107:../Sources/main.c **** 					 	else
 108:../Sources/main.c **** 					 		t--;
 315              		.loc 1 108 0
 316 01ae 7B68     		ldr	r3, [r7, #4]
 317 01b0 013B     		sub	r3, r3, #1
 318 01b2 7B60     		str	r3, [r7, #4]
 319              	.L22:
 109:../Sources/main.c **** 					 	
 110:../Sources/main.c **** 						 TFC_SetBatteryLED_Level(t);
 320              		.loc 1 110 0
 321 01b4 7B68     		ldr	r3, [r7, #4]
 322 01b6 DBB2     		uxtb	r3, r3
 323 01b8 181C     		mov	r0, r3
 324 01ba FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 111:../Sources/main.c **** 						
 112:../Sources/main.c **** 						 for(i=0;i<128;i++)
 325              		.loc 1 112 0
 326 01be 0023     		mov	r3, #0
 327 01c0 3B60     		str	r3, [r7]
 328 01c2 16E0     		b	.L23
 329              	.L24:
 113:../Sources/main.c **** 						 {
 114:../Sources/main.c **** 								 TERMINAL_PRINTF("%d,", (LineScanImage0[i] > 2000? 1 : 0 ));
 330              		.loc 1 114 0
 331 01c4 244B     		ldr	r3, .L31+32
 332 01c6 1A68     		ldr	r2, [r3]
 333 01c8 3B68     		ldr	r3, [r7]
 334 01ca 5B00     		lsl	r3, r3, #1
 335 01cc D318     		add	r3, r2, r3
 336 01ce 1B88     		ldrh	r3, [r3]
 337 01d0 9BB2     		uxth	r3, r3
 338 01d2 FA22     		mov	r2, #250
 339 01d4 D200     		lsl	r2, r2, #3
 340 01d6 9A42     		cmp	r2, r3
 341 01d8 9B41     		sbc	r3, r3, r3
 342 01da 5B42     		neg	r3, r3
 343 01dc DBB2     		uxtb	r3, r3
 344 01de 1B49     		ldr	r1, .L31+20
 345 01e0 1E4A     		ldr	r2, .L31+36
 346 01e2 081C     		mov	r0, r1
 347 01e4 111C     		mov	r1, r2
 348 01e6 1A1C     		mov	r2, r3
 349 01e8 FFF7FEFF 		bl	Qprintf
 112:../Sources/main.c **** 						 for(i=0;i<128;i++)
 350              		.loc 1 112 0
 351 01ec 3B68     		ldr	r3, [r7]
 352 01ee 0133     		add	r3, r3, #1
 353 01f0 3B60     		str	r3, [r7]
 354              	.L23:
 112:../Sources/main.c **** 						 for(i=0;i<128;i++)
 355              		.loc 1 112 0 is_stmt 0
 356 01f2 3B68     		ldr	r3, [r7]
 357 01f4 7F2B     		cmp	r3, #127
 358 01f6 E5D9     		bls	.L24
 115:../Sources/main.c **** 						 }
 116:../Sources/main.c **** 						
 117:../Sources/main.c **** 						 for(i=0;i<128;i++)
 359              		.loc 1 117 0 is_stmt 1
 360 01f8 0023     		mov	r3, #0
 361 01fa 3B60     		str	r3, [r7]
 362 01fc 13E0     		b	.L25
 363              	.L27:
 118:../Sources/main.c **** 						 {
 119:../Sources/main.c **** 								 //TERMINAL_PRINTF("%X",LineScanImage1[i]);
 120:../Sources/main.c **** 								 if(i==127)
 364              		.loc 1 120 0
 365 01fe 3B68     		ldr	r3, [r7]
 366 0200 7F2B     		cmp	r3, #127
 367 0202 0DD1     		bne	.L26
 121:../Sources/main.c **** 									 TERMINAL_PRINTF("\r\n\r\n\r\n\r\n",LineScanImage1[i]);
 368              		.loc 1 121 0
 369 0204 164B     		ldr	r3, .L31+40
 370 0206 1A68     		ldr	r2, [r3]
 371 0208 3B68     		ldr	r3, [r7]
 372 020a 5B00     		lsl	r3, r3, #1
 373 020c D318     		add	r3, r2, r3
 374 020e 1B88     		ldrh	r3, [r3]
 375 0210 9BB2     		uxth	r3, r3
 376 0212 0E49     		ldr	r1, .L31+20
 377 0214 134A     		ldr	r2, .L31+44
 378 0216 081C     		mov	r0, r1
 379 0218 111C     		mov	r1, r2
 380 021a 1A1C     		mov	r2, r3
 381 021c FFF7FEFF 		bl	Qprintf
 382              	.L26:
 117:../Sources/main.c **** 						 for(i=0;i<128;i++)
 383              		.loc 1 117 0
 384 0220 3B68     		ldr	r3, [r7]
 385 0222 0133     		add	r3, r3, #1
 386 0224 3B60     		str	r3, [r7]
 387              	.L25:
 117:../Sources/main.c **** 						 for(i=0;i<128;i++)
 388              		.loc 1 117 0 is_stmt 0
 389 0226 3B68     		ldr	r3, [r7]
 390 0228 7F2B     		cmp	r3, #127
 391 022a E8D9     		bls	.L27
 122:../Sources/main.c **** //								 else
 123:../Sources/main.c **** //									 TERMINAL_PRINTF(",",LineScanImage1[i]);
 124:../Sources/main.c **** 						}										
 125:../Sources/main.c **** 							
 126:../Sources/main.c **** 					}
 127:../Sources/main.c **** 					
 128:../Sources/main.c **** 
 129:../Sources/main.c **** 
 130:../Sources/main.c **** 				break;
 392              		.loc 1 130 0 is_stmt 1
 393 022c 01E0     		b	.L30
 394              	.L29:
  90:../Sources/main.c **** 				break;
 395              		.loc 1 90 0
 396 022e C046     		mov	r8, r8
 397 0230 00E0     		b	.L14
 398              	.L30:
 399              		.loc 1 130 0
 400 0232 C046     		mov	r8, r8
 401              	.L14:
 131:../Sources/main.c **** 			}
 132:../Sources/main.c **** 	}
 402              		.loc 1 132 0
 403 0234 EBE6     		b	.L28
 404              	.L32:
 405 0236 C046     		.align	2
 406              	.L31:
 407 0238 80F00F40 		.word	1074786432
 408 023c 40F00F40 		.word	1074786368
 409 0240 00000000 		.word	TFC_Ticker
 410 0244 00F10F40 		.word	1074786560
 411 0248 00000000 		.word	LineScanImageReady
 412 024c 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 413 0250 00000000 		.word	.LC3
 414 0254 04000000 		.word	.LC5
 415 0258 00000000 		.word	LineScanImage0
 416 025c 08000000 		.word	.LC8
 417 0260 00000000 		.word	LineScanImage1
 418 0264 0C000000 		.word	.LC11
 419              		.cfi_endproc
 420              	.LFE0:
 422              		.text
 423              	.Letext0:
 424              		.file 2 "E:/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 425              		.file 3 "E:/FreeScale/FRDM-TFC/Project_Headers/MKL25Z4.h"
 426              		.file 4 "E:/FreeScale/FRDM-TFC/Project_Headers/TFC\\TFC_Queue.h"
 427              		.file 5 "E:/FreeScale/FRDM-TFC/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 428              		.file 6 "E:/FreeScale/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.h"
 429              		.file 7 "E:/FreeScale/FRDM-TFC/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\GOLGIR~1\AppData\Local\Temp\cc9Us5oe.s:18     .rodata:00000000 $d
C:\Users\GOLGIR~1\AppData\Local\Temp\cc9Us5oe.s:31     .text.main:00000000 $t
C:\Users\GOLGIR~1\AppData\Local\Temp\cc9Us5oe.s:36     .text.main:00000000 main
C:\Users\GOLGIR~1\AppData\Local\Temp\cc9Us5oe.s:407    .text.main:00000238 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_Init
TFC_Task
TFC_GetDIP_Switch
TFC_ReadPot
TFC_SetServo
TFC_SetBatteryLED_Level
TFC_SetMotorPWM
Qprintf
TFC_Ticker
LineScanImageReady
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage0
LineScanImage1
